import unittest

from cartographer.compressors import Compressor, CommandLineCompressor, \
    Pngquant, Jpegoptim


EXAMPLE_PNG = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x02\x00\x00' \
              b'\x00\x02\x08\x02\x00\x00\x00\xfd\xd4\x9as\x00\x00\x00\tpHYs' \
              b'\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00' \
              b'\x00\x07tIME\x07\xe0\x01\x1d\x084$\xcc\xb9QN\x00\x00\x00\x1d' \
              b'iTXtComment\x00\x00\x00\x00\x00Created with GIMPd.e\x07\x00' \
              b'\x00\x00\x15IDAT\x08\xd7\x05\xc1\x01\x01\x00\x00\x00\x80\x10' \
              b'xffO\x17P\xa90)\xe4\x05\xfbc\x9d6\x00\x00\x00\x00\x00IEND' \
              b'\xaeB`\x82'

EXAMPLE_JPEG = b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00H\x00H\x00' \
               b'\x00\xff\xfe\x00\x13Created with GIMP\xff\xdb\x00C\x00\x01' \
               b'\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01' \
               b'\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01' \
               b'\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01' \
               b'\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01' \
               b'\x01\x01\x01\x01\x01\x01\x01\xff\xdb\x00C\x01\x01\x01\x01' \
               b'\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01' \
               b'\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01' \
               b'\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01' \
               b'\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01' \
               b'\x01\x01\x01\x01\x01\xff\xc2\x00\x11\x08\x00\x02\x00\x02' \
               b'\x03\x01\x11\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x14' \
               b'\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' \
               b'\x00\x00\x00\t\xff\xc4\x00\x14\x01\x01\x00\x00\x00\x00\x00' \
               b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00' \
               b'\x0c\x03\x01\x00\x02\x10\x03\x10\x00\x00\x017\x8f\xff\xc4' \
               b'\x00\x16\x10\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00' \
               b'\x00\x00\x00\x00\x00\x06\x07\x05\xff\xda\x00\x08\x01\x01' \
               b'\x00\x01\x05\x02\xa1P\x9f`\xbe\xff\xc4\x00\x14\x11\x01\x00' \
               b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' \
               b'\x00\xff\xda\x00\x08\x01\x03\x01\x01?\x01\x7f\xff\xc4\x00' \
               b'\x14\x11\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' \
               b'\x00\x00\x00\x00\x00\xff\xda\x00\x08\x01\x02\x01\x01?\x01' \
               b'\x7f\xff\xc4\x00\x19\x10\x00\x03\x01\x01\x01\x00\x00\x00' \
               b'\x00\x00\x00\x00\x00\x00\x00\x00\x03\x04\x05\x06\x02\x01' \
               b'\xff\xda\x00\x08\x01\x01\x00\x06?\x02\xdcB\x85\xb8\xd7\xc5' \
               b'\x89\x17_\xa5\x93\x1e<\x9d-\xa9\xd2\xe4\xcb\x9di\xd4\xe7' \
               b'\xcd\x9b=7B\xa23\xd1P"U4\xd5\x10\x97Yq\x0c!\x1f\x03\xe3\x9e' \
               b'|\xff\xc4\x00\x14\x10\x01\x00\x00\x00\x00\x00\x00\x00\x00' \
               b'\x00\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00\x08\x01\x01' \
               b'\x00\x01?!\x1c#ka\xc2\x96\xbb\xfe\xff\xda\x00\x0c\x03\x01' \
               b'\x00\x02\x00\x03\x00\x00\x00\x10\x1f\xff\xc4\x00\x14\x11' \
               b'\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' \
               b'\x00\x00\x00\xff\xda\x00\x08\x01\x03\x01\x01?\x10\x7f\xff' \
               b'\xc4\x00\x14\x11\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00' \
               b'\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00\x08\x01\x02\x01' \
               b'\x01?\x10\x7f\xff\xc4\x00\x14\x10\x01\x00\x00\x00\x00\x00' \
               b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00' \
               b'\x08\x01\x01\x00\x01?\x10jj\x01K\x96\xd9\xfd\x91\xff\xd9'


class TestCompressor(unittest.TestCase):
    def test(self):
        with self.assertRaises(NotImplementedError):
            Compressor().compress(None)


class TestCommandLineCompressor(unittest.TestCase):
    def test(self):
        compressor = CommandLineCompressor(['tee'])
        result = compressor.compress(b'hello')
        self.assertEqual(result, b'hello')


class TestPngquant(unittest.TestCase):
    def test(self):
        compressor = Pngquant()
        result = compressor.compress(EXAMPLE_PNG)
        self.assertGreater(len(result), 10)
        self.assertGreater(len(EXAMPLE_PNG), len(result))


class TestJpegoptim(unittest.TestCase):
    def test(self):
        compressor = Jpegoptim()
        result = compressor.compress(EXAMPLE_JPEG)
        self.assertGreater(len(result), 10)
        self.assertGreater(len(EXAMPLE_JPEG), len(result))
